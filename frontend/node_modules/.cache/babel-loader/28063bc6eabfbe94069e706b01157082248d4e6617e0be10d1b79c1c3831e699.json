{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadeer\\\\Desktop\\\\PROJECTS\\\\BLOGGING\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add request interceptor to add token to all requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log('Request:', config); // Debug log\n  return config;\n}, error => {\n  console.error('Request error:', error); // Debug log\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\naxios.interceptors.response.use(response => {\n  console.log('Response:', response); // Debug log\n  return response;\n}, error => {\n  var _error$response;\n  console.error('Response error:', error.response || error); // Debug log\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Load user data and token from localStorage on initial load\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      console.log('Attempting login for:', username);\n      const response = await axios.post('http://localhost:5000/api/login', {\n        username,\n        password\n      });\n      console.log('Login response:', response.data);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      if (!access_token || !userData) {\n        throw new Error('Invalid response from server');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Update state\n      setToken(access_token);\n      setUser(userData);\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response3$data;\n      console.error('Login error:', ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed');\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      console.log('Attempting registration for:', username);\n      const response = await axios.post('http://localhost:5000/api/register', {\n        username,\n        email,\n        password\n      });\n      console.log('Registration response:', response.data);\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      if (!access_token || !userData) {\n        throw new Error('Invalid response from server');\n      }\n\n      // Store token and user data\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n\n      // Update state\n      setToken(access_token);\n      setUser(userData);\n\n      // Set default authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response5$data;\n      console.error('Registration error:', ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error.message);\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Registration failed');\n    }\n  };\n  const logout = () => {\n    // Clear localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Clear state\n    setToken(null);\n    setUser(null);\n\n    // Remove authorization header\n    delete axios.defaults.headers.common['Authorization'];\n  };\n  const updateUser = userData => {\n    if (user) {\n      const updatedUser = {\n        id: user.id,\n        username: user.username,\n        email: user.email,\n        ...userData\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout,\n      updateUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","children","_s","user","setUser","setToken","storedToken","storedUser","JSON","parse","common","login","username","password","post","data","access_token","userData","Error","setItem","stringify","_error$response2","_error$response3","_error$response3$data","message","register","email","_error$response4","_error$response5","_error$response5$data","logout","updateUser","updatedUser","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/khadeer/Desktop/PROJECTS/BLOGGING/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  profile_picture?: string;\r\n  bio?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  updateUser: (userData: Partial<User>) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n// Add request interceptor to add token to all requests\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    console.log('Request:', config); // Debug log\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error); // Debug log\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle token expiration\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response:', response); // Debug log\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response || error); // Debug log\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load user data and token from localStorage on initial load\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    \r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      console.log('Attempting login for:', username);\r\n      const response = await axios.post('http://localhost:5000/api/login', {\r\n        username,\r\n        password\r\n      });\r\n\r\n      console.log('Login response:', response.data);\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      if (!access_token || !userData) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      // Update state\r\n      setToken(access_token);\r\n      setUser(userData);\r\n      \r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n    } catch (error: any) {\r\n      console.error('Login error:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Login failed');\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    try {\r\n      console.log('Attempting registration for:', username);\r\n      const response = await axios.post('http://localhost:5000/api/register', {\r\n        username,\r\n        email,\r\n        password\r\n      });\r\n\r\n      console.log('Registration response:', response.data);\r\n      const { access_token, user: userData } = response.data;\r\n      \r\n      if (!access_token || !userData) {\r\n        throw new Error('Invalid response from server');\r\n      }\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      // Update state\r\n      setToken(access_token);\r\n      setUser(userData);\r\n      \r\n      // Set default authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\r\n    } catch (error: any) {\r\n      console.error('Registration error:', error.response?.data || error.message);\r\n      throw new Error(error.response?.data?.message || 'Registration failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Clear localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Clear state\r\n    setToken(null);\r\n    setUser(null);\r\n    \r\n    // Remove authorization header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const updateUser = (userData: Partial<User>) => {\r\n    if (user) {\r\n      const updatedUser: User = {\r\n        id: user.id,\r\n        username: user.username,\r\n        email: user.email,\r\n        ...userData\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, register, logout, updateUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}