{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadeer\\\\Desktop\\\\PROJECTS\\\\BLOGGING\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      fetchProfile();\n    }\n  }, []);\n  const fetchProfile = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5000/api/profile', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Profile fetch error:', error);\n      localStorage.removeItem('token');\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        username,\n        password\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      setUser(userData);\n      setIsAuthenticated(true);\n      console.log('Login successful, user data:', userData);\n    } catch (error) {\n      console.error('Login error:', error);\n      throw new Error('Invalid credentials');\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      await axios.post('http://localhost:5000/api/register', {\n        username,\n        email,\n        password\n      });\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw new Error('Registration failed');\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetchProfile","response","get","headers","Authorization","data","error","console","removeItem","login","username","password","post","access_token","userData","setItem","log","Error","register","email","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/khadeer/Desktop/PROJECTS/BLOGGING/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      fetchProfile();\r\n    }\r\n  }, []);\r\n\r\n  const fetchProfile = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:5000/api/profile', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setUser(response.data);\r\n      setIsAuthenticated(true);\r\n    } catch (error) {\r\n      console.error('Profile fetch error:', error);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', {\r\n        username,\r\n        password\r\n      });\r\n      \r\n      const { access_token, user: userData } = response.data;\r\n      localStorage.setItem('token', access_token);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      console.log('Login successful, user data:', userData);\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw new Error('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/register', {\r\n        username,\r\n        email,\r\n        password\r\n      });\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw new Error('Registration failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}