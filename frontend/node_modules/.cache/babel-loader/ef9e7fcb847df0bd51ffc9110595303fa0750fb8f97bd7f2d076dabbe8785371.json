{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khadeer\\\\Desktop\\\\PROJECTS\\\\BLOGGING\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// Configure axios defaults\naxios.defaults.baseURL = 'http://localhost:5000';\n\n// Add request interceptor to add token to all requests\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log('Request:', config); // Debug log\n  return config;\n}, error => {\n  console.error('Request error:', error); // Debug log\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle token expiration\naxios.interceptors.response.use(response => {\n  console.log('Response:', response); // Debug log\n  return response;\n}, error => {\n  var _error$response;\n  console.error('Response error:', error.response || error); // Debug log\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/login', {\n        username,\n        password\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/register', {\n        username,\n        email,\n        password\n      });\n      const {\n        access_token,\n        user: userData\n      } = response.data;\n      setToken(access_token);\n      setUser(userData);\n      localStorage.setItem('token', access_token);\n      localStorage.setItem('user', JSON.stringify(userData));\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","defaults","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","console","log","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","AuthProvider","children","_s","user","setUser","setToken","storedToken","storedUser","JSON","parse","login","username","password","post","access_token","userData","data","setItem","stringify","register","email","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/khadeer/Desktop/PROJECTS/BLOGGING/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  profile_picture?: string;\r\n  bio?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (username: string, email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = 'http://localhost:5000';\r\n\r\n// Add request interceptor to add token to all requests\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    console.log('Request:', config); // Debug log\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request error:', error); // Debug log\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle token expiration\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Response:', response); // Debug log\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('Response error:', error.response || error); // Debug log\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/login', {\r\n        username,\r\n        password,\r\n      });\r\n      const { access_token, user: userData } = response.data;\r\n      setToken(access_token);\r\n      setUser(userData);\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username: string, email: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/register', {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      const { access_token, user: userData } = response.data;\r\n      setToken(access_token);\r\n      setUser(userData);\r\n      localStorage.setItem('token', access_token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}